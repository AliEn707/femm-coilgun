#summary Возможности оптимизации конфигурации гаусса
#sidebar TableOfContents

= Что такое оптимизация =
Оптимизация - это в нашем случае поиск лучшей конфигурации гаусса по сравнению с тем что у нас есть на данный момент. Например, скрипт насчитал, что скорость пули вашего гаусса получается 10 м/с, но вы хотите более высоких значений. Так вот поиск при каких параметрах гаусса (ёмкости конденсатора, начального напряжения, катушки, пули и.т.п) будет выходить более высокая скорость - это и есть оптимизация. 

Оптимизацию можно выполнять вручную (например, менять какие-либо настройки в начальных значениях, а затем смотреть, что из этого получается). Но возможность поиска более быстрого решения уже заложена в самом скрипте и далее будет расписано как ей воспользоваться.

= Как оптимизировать при помощи скрипта =
Далее приведёт раздел конфигурационного файла, который касается оптимизации:
{{{
-- Параметры оптимизации
conf.opt     = 0	-- Нужно ли оптимизировать полученные результаты (0 - нет, 1 - да)
conf.opt_t   = "vel"	-- Что именно надо оптимизировать ("vel" - скорость, "eff" - эффективность)
opt.l_kat    = nil	-- Оптимизация по длине катушки (nil - без оптимизации, <значение> - шаг для подбора оптимального значения)
opt.d_kat    = nil	-- Оптимизация по диаметру катушки (nil - без оптимизации, <значение> - шаг для подбора оптимального значения)
opt.l_sdv    = nil	-- Оптимизация по начальной позиции пули в катушке (nil - без оптимизации, <значение> - шаг для подбора оптимального значения)
}}}
В первую очередь для включения оптимизации нужно задать параметр *conf.opt* = 1, а затем выбрать по каким параметрам мы собираемся оптимизировать. В *conf.opt_t* задаётся что именно мы будем оптимизировать - скорость или КПД. Если в conf.opt_t указать "eff", то скрипт будет искать результаты с максимальным КПД.

Если мы хотим оптимизировать по диаметру катушки, то меняем параметр *opt.d_kat* с nil на 1. Единица, которую мы задали - это шаг в миллиметрах, с которым скрипт будет менять диаметр катушки, постепенно приближаясь к более высокой скорости, чем в первоначальном варианте.

Можно оптимизировать по нескольким параметрам. Например одновременно по длине катушки и по диаметру катушки. Для этого выставляем opt.d_kat = 1 и opt.l_kat = 1. В этом случае скрипт в процессе оптимизации будет менять диаметр и длину катушки на этот шаг и приближаться к конфигурации, которая будет выдавать более высокую скорость.

После *opt.* можно указывать вообще любой параметр, который есть в настройках. Например, если задать opt.l_puli = 1, то будет оптимизироваться по длине пули, подбирая значения с шагом в 1 мм.

Обратите внимание, что в процессе оптимизации скрипт запускает симуляцию много раз. Так что надо набраться терпения, чтобы дождаться, когда оптимизация наконец-то закончит работу.

= Ограничение оптимизации =
  * Оптимизация в скрипте выполняется при помощи алгоритма, похожего на [http://ru.wikipedia.org/wiki/%C3%F0%E0%E4%E8%E5%ED%F2%ED%FB%E9_%F1%EF%F3%F1%EA градиентный спуск]. Поэтому скрипт в конце концов приходит не к оптимальной скорости, а локальному максимуму, который располагается рядом с начальными параметрами. Но если для введённых начальных значений максимум скорости только один, то будет найдена оптимальная конфигурация. 